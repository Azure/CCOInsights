name: "GitHub Contributions"

on:
  workflow_dispatch:
    inputs:
      resourceGroupName:
        type: string
        description: "Resource Group where infrastructure will be deployed/updated"
        required: true
        default: ""

jobs:
  deploy_dashboard:
    runs-on: ubuntu-latest
    name: "Dashboard Backend"
    steps:
      - name: "Checkout"
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Login via Az module
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}
          enable-AzPSSession: true
      - name: "Deploy infrastructure"
        id: rg
        uses: azure/arm-deploy@v1
        with:
          deploymentName: ${{ github.event.inputs.resourceGroupName }}
          resourceGroupName: ${{ github.event.inputs.resourceGroupName }}
          template: ./dashboards/GitHubDashboard-Contributors/infrastructure/deploy.bicep
      - name: "Replace tokens"
        shell: pwsh
        run: |
          $ConvertTokenListFunctionInput = @{
            FilePath   = './dashboards/GitHubDashboard-Contributors/src/local.settings.json'
            TokenName  = '<<PAT>>'
            TokenValue = '${{ secrets.PAT }}'
          }
          ./tools/scripts/Convert-TokenInFile.ps1 @ConvertTokenListFunctionInput -Verbose
      - name: "Deploy code"
        uses: azure/powershell@v1
        with:
         azPSVersion: "latest"
         inlineScript: |
          # Initialize parameters
          #Install-Module -Name Az.Functions -Force
          $functionApp = Get-AzFunctionApp -ResourceGroupName '${{ github.event.inputs.resourceGroupName }}'
          $functionAppName = $functionApp[0].Name
          $DeployFunctionInputs = @{
              ResourceGroup      = '${{ github.event.inputs.resourceGroupName }}'
              FunctionAppName    = $functionAppName
              Dashboard          = 'GitHub'
          }
          # Invoke Function
          ./tools/scripts/deploy-function.ps1 @DeployFunctionInputs -Verbose
