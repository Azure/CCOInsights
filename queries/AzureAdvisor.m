// Get Recommendations
let
    Source = Json.Document(Web.Contents("https://management.azure.com/subscriptions?api-version=2016-06-01")),
    value = Source[value],
    #"Converted to Table" = Table.FromList(value, Splitter.SplitByNothing(), null, null, ExtraValues.Error),
    #"Expanded Column1" = Table.ExpandRecordColumn(#"Converted to Table", "Column1", {"subscriptionId","displayName"}, {"Column1.subscriptionId","Column1.displayName"}),
    #"Renamed Columns" = Table.RenameColumns(#"Expanded Column1",{{"Column1.subscriptionId", "SubscriptionId"}, {"Column1.displayName", "Subscription Name"}}),
    #"List Recommendations" = Table.AddColumn(#"Renamed Columns", "ListRecommendations", each ListRecommendations([SubscriptionId])),
    #"Removed Errors" = Table.RemoveRowsWithErrors(#"List Recommendations", {"ListRecommendations"}),
    #"Expanded ListRecommendations1" = Table.ExpandTableColumn(#"Removed Errors", "ListRecommendations", {"Recommendation Id", "category", "impact", "impactedField", "impactedValue", "lastUpdated", "risk", "problem", "solution", "type"}, {"Recommendation Id", "category", "impact", "impactedField", "impactedValue", "lastUpdated", "risk", "problem", "solution", "type"}),
    #"Filtered Rows" = Table.SelectRows(#"Expanded ListRecommendations1", each ([problem] <> "Improve the security of your Azure resources")),
    #"Added Conditional Column" = Table.AddColumn(#"Filtered Rows", "Recommendation URL", each if [problem] = "Improve the reliability of your availability set" then "https://docs.microsoft.com/en-us/azure/virtual-machines/windows/managed-disks-overview" else if [problem] = "This virtual machine is not configured for fault tolerance" then "https://docs.microsoft.com/en-us/azure/virtual-machines/windows/change-availability-set" else if [problem] = "Your virtual machine has low usage" then "https://azure.microsoft.com/en-us/pricing/calculator/" else if [problem] = "This availability set is not configured for fault tolerance" then "https://docs.microsoft.com/en-us/azure/virtual-machines/windows/tutorial-availability-sets?toc=%2Fazure%2Fvirtual-machines%2Fwindows%2Ftoc.json#add-a-new-vm-to-an-existing-availability-set" else if [problem] = "Improve the performance of your SQL Azure database" then "https://docs.microsoft.com/en-us/azure/sql-database/sql-database-advisor" else if [problem] = "Create an Azure service health alert" then "https://docs.microsoft.com/en-us/azure/monitoring-and-diagnostics/monitoring-activity-log-alerts-on-service-notifications" else if [problem] = "Configure DNS Time to Live to 60 seconds" then "https://docs.microsoft.com/en-us/azure/traffic-manager/traffic-manager-monitoring" else if [problem] = "Add at least one more endpoint to the profile, preferably in another Azure region" then "https://docs.microsoft.com/en-us/azure/traffic-manager/traffic-manager-endpoint-types" else if Text.Contains([problem], "Add an endpoint configured to") then "https://docs.microsoft.com/en-us/azure/traffic-manager/traffic-manager-manage-endpoints" else null),
    #"Changed Type" = Table.TransformColumnTypes(#"Added Conditional Column",{{"Recommendation URL", type text}}),
    #"Added Conditional Column1" = Table.AddColumn(#"Changed Type", "Image", each if Text.Contains([problem], "Improve the security of your Azure resource") then "https://azure.microsoft.com/svghandler/security-center/?width=600&height=315" else if Text.Contains([problem], "Your virtual machine has low usage") then "https://raw.githubusercontent.com/JSFCES/DashboardImages/master/LowUsageVM.svg?sanitize=true" else if Text.Contains([problem], "Buy virtual machine reserved instances") then "https://azurecomcdn.azureedge.net/cvt-19310ed07ad97301763e5432fc983677a816728ac59717720722e9728c21c602/images/page/pricing/hybrid-benefit/ahub-save.png" else if Text.Contains([problem], "Your virtual machine is not configured for backup") then "https://raw.githubusercontent.com/JSFCES/DashboardImages/master/VMBackup.svg?sanitize=true" else if Text.Contains([problem], "Your virtual network gateway") then "https://azurecomcdn.azureedge.net/cvt-ab79ca2a218608d26c26428d9e099c013b0d2c572504031fa6e10dd32d697722/images/page/services/vpn-gateway/01-connect.png" else if Text.Contains([problem], "Improve the reliability of your availability set") then "https://raw.githubusercontent.com/JSFCES/DashboardImages/master/MDonAS.svg?sanitize=true" else if Text.Contains([problem], "This virtual machine is not configured for fault tolerance") then "https://raw.githubusercontent.com/JSFCES/DashboardImages/master/FaultTolerance.svg?sanitize=true" else if Text.Contains([problem], "Improve the performance of your SQL Azure database") then "https://raw.githubusercontent.com/JSFCES/DashboardImages/master/SQLPerfromance.svg?sanitize=true" else if Text.Contains([problem], "This availability set ") then "https://raw.githubusercontent.com/JSFCES/DashboardImages/master/AddVMtoAS.svg?sanitize=true" else if [problem] = "Create an Azure service health alert" then "https://raw.githubusercontent.com/JSFCES/DashboardImages/master/ServiceHealthAlert.svg?sanitize=true" else if [problem] = "Configure DNS Time to Live to 60 seconds" then "https://raw.githubusercontent.com/JSFCES/DashboardImages/master/TrafficManagerTTL60.svg?sanitize=true" else if Text.Contains([problem], "Add an endpoint configured to") then "https://raw.githubusercontent.com/JSFCES/DashboardImages/master/TrafficManagerEndpoints.svg?sanitize=true" else if [problem] = "Add at least one more endpoint to the profile, preferably in another Azure region" then "https://raw.githubusercontent.com/JSFCES/DashboardImages/master/TrafficManagerMoreRegions.svg?sanitize=true" else if [problem] = "Enable Soft Delete to protect your blob data" then "https://raw.githubusercontent.com/JSFCES/DashboardImages/master/SoftDelete.svg?sanitize=true" else if Text.Contains([problem], "Right-size underutilized") then "https://raw.githubusercontent.com/JSFCES/DashboardImages/master/SQLUnderUtil.svg?sanitize=true" else null),
    #"Filtered Rows1" = Table.SelectRows(#"Added Conditional Column1", each [impactedField] <> null and [impactedField] <> ""),
    #"Duplicated Column" = Table.DuplicateColumn(#"Filtered Rows1", "Recommendation Id", "id - Copy"),
    #"Split Column by Delimiter" = Table.SplitColumn(#"Duplicated Column", "id - Copy", Splitter.SplitTextByDelimiter("/", QuoteStyle.Csv), {"id - Copy.1", "id - Copy.2", "id - Copy.3", "id - Copy.4", "id - Copy.5", "id - Copy.6", "id - Copy.7", "id - Copy.8", "id - Copy.9", "id - Copy.10", "id - Copy.11", "id - Copy.12", "id - Copy.13", "id - Copy.14", "id - Copy.15"}),
    #"Changed Type2" = Table.TransformColumnTypes(#"Split Column by Delimiter",{{"id - Copy.1", type text}, {"id - Copy.2", type text}, {"id - Copy.3", type text}, {"id - Copy.4", type text}, {"id - Copy.5", type text}, {"id - Copy.6", type text}, {"id - Copy.7", type text}, {"id - Copy.8", type text}, {"id - Copy.9", type text}, {"id - Copy.10", type text}, {"id - Copy.11", type text}, {"id - Copy.12", type text}, {"id - Copy.13", type text}, {"id - Copy.14", type text}, {"id - Copy.15", type text}}),
    #"Renamed Columns1" = Table.RenameColumns(#"Changed Type2",{{"id - Copy.5", "Resource Group Name"}, {"id - Copy.8", "Resource Type"}, {"id - Copy.9", "Resource Name"}, {"id - Copy.11", "Subnet"}}),
    #"Removed Columns" = Table.RemoveColumns(#"Renamed Columns1",{"id - Copy.1", "id - Copy.2", "id - Copy.3", "id - Copy.4", "id - Copy.6", "id - Copy.7", "id - Copy.10", "id - Copy.12", "id - Copy.13", "id - Copy.14", "id - Copy.15"}),
    #"Replaced Value" = Table.ReplaceValue(#"Removed Columns",null,"Subscription",Replacer.ReplaceValue,{"Resource Type"}),
    #"Added Conditional Column2" = Table.AddColumn(#"Replaced Value", "Resource Name Final", each if [Resource Name] = null then [Subscription Name] else [Resource Name]),
    #"Replaced Value1" = Table.ReplaceValue(#"Added Conditional Column2","Configure DNS Time to Live to 60 seconds","Time to Live (TTL) affects how recent of a response a client will get when it makes a request to Azure Traffic Manager. Reducing the TTL value means that the client will be routed to a functioning endpoint faster in the case of a failover. Configure your TTL to 60 seconds to route traffic to a health endpoint as quickly as possible.",Replacer.ReplaceText,{"solution"}),
    #"Replaced Value2" = Table.ReplaceValue(#"Replaced Value1","Add at least one more endpoint to the profile, preferably in another Azure region","Profiles should have more than one endpoint to ensure availability if one of the endpoints fails. It is also recommended that endpoints be in different regions",Replacer.ReplaceText,{"solution"}),
    #"Replaced Value3" = Table.ReplaceValue(#"Replaced Value2","Add an endpoint configured to ""All (World)""","For geographic routing, traffic is routed to endpoints based on defined regions. When a region fails, there is no pre-defined failover. Having an endpoint where the Regional Grouping is configured to \""All (World)\"" for geographic profiles will avoid traffic black holing and guarantee service remains available.",Replacer.ReplaceText,{"solution"}),
    #"Replaced Value4" = Table.ReplaceValue(#"Replaced Value3","Create an Azure service health alert","Service health alerts help you stay notified when Azure service issues affect you. Create a service health alert for the regions and services that you care about",Replacer.ReplaceText,{"solution"}),
    #"Replaced Value5" = Table.ReplaceValue(#"Replaced Value4","Right-size underutilized SQL Databases","We've analyzed the DTU consumption of your SQL Database over the past 14 days and identified SQL Databases with low usage. You can save money by right-sizing to the recommended SKU based on the 95th percentile of your every day workload",Replacer.ReplaceText,{"solution"})
in
    #"Replaced Value5"

// ListRecommendations
let ListRecommendations = (subscriptionId as text) =>
let
    Source = Json.Document(Web.Contents("https://management.azure.com/subscriptions/"&subscriptionId&"/providers/Microsoft.Advisor/recommendations?api-version=2017-03-31")),
    value = Source[value],
    #"Converted to Table" = Table.FromList(value, Splitter.SplitByNothing(), null, null, ExtraValues.Error),
    #"Expanded Column1" = Table.ExpandRecordColumn(#"Converted to Table", "Column1", {"id", "name", "properties", "type"}, {"id", "name", "properties", "type"}),
    #"Expanded properties" = Table.ExpandRecordColumn(#"Expanded Column1", "properties", {"category", "impact", "impactedField", "impactedValue", "lastUpdated", "risk", "shortDescription"}, {"category", "impact", "impactedField", "impactedValue", "lastUpdated", "risk", "shortDescription"}),
    #"Expanded shortDescription" = Table.ExpandRecordColumn(#"Expanded properties", "shortDescription", {"problem", "solution"}, {"problem", "solution"}),
    #"Renamed Columns" = Table.RenameColumns(#"Expanded shortDescription",{{"id", "Recommendation Id"}}),
    #"Removed Columns" = Table.RemoveColumns(#"Renamed Columns",{"name"})
in
    #"Removed Columns"
in
    ListRecommendations